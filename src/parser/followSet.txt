program={DOLLAR}
otherFunctions={TK_MAIN}
mainFunction={DOLLAR}
function={TK_FUNID,TK_MAIN}
input_par={TK_OUTPUT,TK_SEM}
output_par={TK_SEM}
parameter_list={TK_SQR}
dataType={TK_ID,TK_COLON}
primitiveDatatype={TK_ID,TK_COLON}
constructedDatatype={TK_ID,TK_COLON}
remaining_list={TK_SQR}
stmts={TK_END}
typeDefinitions={TK_TYPE,TK_ID,TK_WHILE,TK_IF,TK_READ,TK_WRITE,TK_SQL,TK_CALL,TK_RETURN}
typeDefinition={TK_DEFINETYPE,TK_RECORD,TK_UNION,TK_TYPE,TK_ID,TK_WHILE,TK_IF,TK_READ,TK_WRITE,TK_SQL,TK_CALL,TK_RETURN}
fieldDefinitions={TK_ENDRECORD,TK_ENDUNION}
fieldDefinition={TK_TYPE,TK_ENDRECORD,TK_ENDUNION}
moreFields={TK_ENDRECORD,TK_ENDUNION}
declarations={TK_RETURN,TK_ID,TK_WHILE,TK_IF,TK_READ,TK_WRITE,TK_SQL,TK_CALL}
declaration={TK_TYPE,TK_RETURN,TK_ID,TK_WHILE,TK_IF,TK_READ,TK_WRITE,TK_SQL,TK_CALL}
global_or_not={TK_SEM}
otherStmts={TK_RETURN,TK_ENDWHILE,TK_ELSE,TK_ENDIF}
stmt={TK_ID,TK_WHILE,TK_IF,TK_READ,TK_WRITE,TK_SQL,TK_CALL,TK_RETURN,TK_ENDWHILE,TK_ELSE,TK_ENDIF}
assignmentStmt={TK_ID,TK_WHILE,TK_IF,TK_READ,TK_WRITE,TK_SQL,TK_CALL,TK_RETURN,TK_ENDWHILE,TK_ELSE,TK_ENDIF}
iterativeStmt={TK_ID,TK_WHILE,TK_IF,TK_READ,TK_WRITE,TK_SQL,TK_CALL,TK_RETURN,TK_ENDWHILE,TK_ELSE,TK_ENDIF}
conditionalStmt={TK_ID,TK_WHILE,TK_IF,TK_READ,TK_WRITE,TK_SQL,TK_CALL,TK_RETURN,TK_ENDWHILE,TK_ELSE,TK_ENDIF}
ioStmt={TK_ID,TK_WHILE,TK_IF,TK_READ,TK_WRITE,TK_SQL,TK_CALL,TK_RETURN,TK_ENDWHILE,TK_ELSE,TK_ENDIF}
funCallStmt={TK_ID,TK_WHILE,TK_IF,TK_READ,TK_WRITE,TK_SQL,TK_CALL,TK_RETURN,TK_ENDWHILE,TK_ELSE,TK_ENDIF}
definetypestmt={TK_DEFINETYPE,TK_RECORD,TK_UNION,TK_TYPE,TK_ID,TK_WHILE,TK_IF,TK_READ,TK_WRITE,TK_SQL,TK_CALL,TK_RETURN}
singleOrRecId={TK_ASSIGNOP,TK_CL,TK_MUL,TK_DIV,TK_ADD,TK_MINUS,TK_SEM,TK_LT,TK_LE,TK_EQ,TK_GT,TK_GE,TK_NE,TK_THEN}
singleOrRecIdLF={TK_ASSIGNOP,TK_CL,TK_MUL,TK_DIV,TK_ADD,TK_MINUS,TK_SEM,TK_LT,TK_LE,TK_EQ,TK_GT,TK_GE,TK_NE,TK_THEN}
outputParameters={TK_CALL}
inputParameters={TK_SEM}
conditionalStmtLF={TK_ENDIF}
arithmeticExpression={TK_SEM,TK_CL}
plusMinusLR={TK_SEM,TK_CL}
plusMinusLF={TK_ADD,TK_MINUS,TK_SEM,TK_CL}
multDivExpr={TK_ADD,TK_MINUS,TK_SEM,TK_CL}
multDivLR={TK_ADD,TK_MINUS,TK_SEM,TK_CL}
multDivLF={TK_MUL,TK_DIV,TK_ADD,TK_MINUS,TK_SEM,TK_CL}
outerMost={TK_MUL,TK_DIV,TK_ADD,TK_MINUS,TK_SEM,TK_CL}
booleanExpression={TK_CL,TK_THEN}
var={TK_CL,TK_MUL,TK_DIV,TK_ADD,TK_MINUS,TK_SEM,TK_LT,TK_LE,TK_EQ,TK_GT,TK_GE,TK_NE,TK_THEN}
logicalOp={TK_OP}
relationalOp={TK_ID,TK_NUM,TK_RNUM}
returnStmt={TK_END}
optionalReturn={TK_SEM}
idList={TK_SQR}
more_ids={TK_SQR}
A={TK_RUID}